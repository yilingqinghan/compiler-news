<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"><channel>
<title>编译器周报</title>
<description>最近一周聚合（LLVM/GCC/Rust/Swift/Wasmtime 等）</description>
<link></link>
<pubDate>2025-08-18T21:23:59.798604</pubDate>
<item>
<title>[GCC 15] aarch64: 解决构建谓词时的模式不匹配问题 [PR121118]</title>
<description>修复了AArch64 SVE指令集在组合谓词时的模式不匹配问题。</description>
<link>https://inbox.sourceware.org/gcc-patches/VI1PR08MB5325CFEB1A38EF036F519632FF31A@VI1PR08MB5325.eurprd08.prod.outlook.com/</link>
<guid>https://inbox.sourceware.org/gcc-patches/VI1PR08MB5325CFEB1A38EF036F519632FF31A@VI1PR08MB5325.eurprd08.prod.outlook.com/</guid>
</item>
<item>
<title>[MLIR] 修复SCF验证器崩溃</title>
<description>由于对空操作数值的解引用导致MLIR SCF验证器崩溃的修复</description>
<link>https://github.com/llvm/llvm-project/commit/cfe5975eaf0adf333c8210925318a7a43b1750de</link>
<guid>https://github.com/llvm/llvm-project/commit/cfe5975eaf0adf333c8210925318a7a43b1750de</guid>
</item>
<item>
<title>PR81358：启用libatomic的自动链接</title>
<description>GCC中的libatomic自动链接引入了某些架构上的构建关注。</description>
<link>https://inbox.sourceware.org/gcc-patches/IA1PR12MB9031FA41EB596FB042CE2F80CE31A@IA1PR12MB9031.namprd12.prod.outlook.com/</link>
<guid>https://inbox.sourceware.org/gcc-patches/IA1PR12MB9031FA41EB596FB042CE2F80CE31A@IA1PR12MB9031.namprd12.prod.outlook.com/</guid>
</item>
<item>
<title>修复GCC中对部分寄存器破坏的处理</title>
<description>修复了GCC对部分寄存器破坏的处理，以提高编译准确性。</description>
<link>https://github.com/gcc-mirror/gcc/commit/4a56ba8c8ec281ef794a598f64a5707204ca9088</link>
<guid>https://github.com/gcc-mirror/gcc/commit/4a56ba8c8ec281ef794a598f64a5707204ca9088</guid>
</item>
<item>
<title>[PATCH] gcse：修复对部分寄存器污染的处理 [PR97497]</title>
<description>补丁解决了GCC中的gcse传递对部分寄存器污染的不一致性。</description>
<link>https://inbox.sourceware.org/gcc-patches/mpttt25qahd.fsf@arm.com/</link>
<guid>https://inbox.sourceware.org/gcc-patches/mpttt25qahd.fsf@arm.com/</guid>
</item>
<item>
<title>LLVM项目：近期提交的代码集群</title>
<description>LLVM项目中的一些小修复和优化，没有显著的行为或性能变化。</description>
<link>https://github.com/llvm/llvm-project/commit/c99cbc880fb2bfa6dbddd8eedf42d63c32081cc0</link>
<guid>https://github.com/llvm/llvm-project/commit/c99cbc880fb2bfa6dbddd8eedf42d63c32081cc0</guid>
</item>
<item>
<title>[RISCV] 添加SpacemiT XSMTVDot（向量点积）扩展</title>
<description>在LLVM中为RISC-V添加SpacemiT XSMTVDot向量点积操作。</description>
<link>https://github.com/llvm/llvm-project/commit/6842cc556222659256b32883bb2b63ff019100e0</link>
<guid>https://github.com/llvm/llvm-project/commit/6842cc556222659256b32883bb2b63ff019100e0</guid>
</item>
<item>
<title>SimplifyCFG 避免在循环头中进行线程处理</title>
<description>修改SimplifyCFG传递以避免通过循环头进行控制流线程化，保留规范的循环结构。</description>
<link>https://github.com/llvm/llvm-project/commit/ea2f5395b1acdc6eaf69a79b7660d7fa7d08c271</link>
<guid>https://github.com/llvm/llvm-project/commit/ea2f5395b1acdc6eaf69a79b7660d7fa7d08c271</guid>
</item>
<item>
<title>[MLIR] 修复SCF验证器崩溃</title>
<description>由于对空操作数值的解引用导致MLIR SCF验证器崩溃的修复</description>
<link>https://github.com/llvm/llvm-project/commit/cfe5975eaf0adf333c8210925318a7a43b1750de</link>
<guid>https://github.com/llvm/llvm-project/commit/cfe5975eaf0adf333c8210925318a7a43b1750de</guid>
</item>
<item>
<title>LLVM项目：近期提交的代码集群</title>
<description>LLVM项目中的一些小修复和优化，没有显著的行为或性能变化。</description>
<link>https://github.com/llvm/llvm-project/commit/c99cbc880fb2bfa6dbddd8eedf42d63c32081cc0</link>
<guid>https://github.com/llvm/llvm-project/commit/c99cbc880fb2bfa6dbddd8eedf42d63c32081cc0</guid>
</item>
<item>
<title>[RISCV] 添加SpacemiT XSMTVDot（向量点积）扩展</title>
<description>在LLVM中为RISC-V添加SpacemiT XSMTVDot向量点积操作。</description>
<link>https://github.com/llvm/llvm-project/commit/6842cc556222659256b32883bb2b63ff019100e0</link>
<guid>https://github.com/llvm/llvm-project/commit/6842cc556222659256b32883bb2b63ff019100e0</guid>
</item>
<item>
<title>SimplifyCFG 避免在循环头中进行线程处理</title>
<description>修改SimplifyCFG传递以避免通过循环头进行控制流线程化，保留规范的循环结构。</description>
<link>https://github.com/llvm/llvm-project/commit/ea2f5395b1acdc6eaf69a79b7660d7fa7d08c271</link>
<guid>https://github.com/llvm/llvm-project/commit/ea2f5395b1acdc6eaf69a79b7660d7fa7d08c271</guid>
</item>
<item>
<title>LLVM项目变更的集群摘要</title>
<description>集群包括对AVX512VLBW内置函数进行的小范围重构和增强测试覆盖，没有功能变更。</description>
<link>https://github.com/llvm/llvm-project/commit/169b43d4b802a5effbaa715c203e4d0ba85d7b89</link>
<guid>https://github.com/llvm/llvm-project/commit/169b43d4b802a5effbaa715c203e4d0ba85d7b89</guid>
</item>
<item>
<title>[LoongArch] 在启用代码放松时减少保留的重定位数量</title>
<description>优化 LoongArchAsmBackend，在启用代码放松时减少不必要的重定位。</description>
<link>https://github.com/llvm/llvm-project/commit/76fb1619f096d91a7ce231d9cc446b1a4454b3cf</link>
<guid>https://github.com/llvm/llvm-project/commit/76fb1619f096d91a7ce231d9cc446b1a4454b3cf</guid>
</item>
<item>
<title>[MLIR] 添加 Egress 方言维护者</title>
<description>该提交为 MLIR egress 及相关方言添加了维护者。</description>
<link>https://github.com/llvm/llvm-project/commit/51b5a3e1a6deee76332c3d3db916b7fec89fe2f2</link>
<guid>https://github.com/llvm/llvm-project/commit/51b5a3e1a6deee76332c3d3db916b7fec89fe2f2</guid>
</item>
<item>
<title>改进 __builtin_{,dynamic_}object_size 实现</title>
<description>在不改变 ABI 或性能的情况下，改善 Clang 的 ASTContext 中的对象大小计算。</description>
<link>https://github.com/llvm/llvm-project/commit/0d05c42b6ac48c73c8fb90011b62d3f856aadf0d</link>
<guid>https://github.com/llvm/llvm-project/commit/0d05c42b6ac48c73c8fb90011b62d3f856aadf0d</guid>
</item>
<item>
<title>编译器问题及改进</title>
<description>Clang和GCC针对LoongArch的编译器修复和改进。</description>
<link>https://github.com/llvm/llvm-project/commit/bcab8ac126c0b4c439caa3104d66d33d0f70f86f</link>
<guid>https://github.com/llvm/llvm-project/commit/bcab8ac126c0b4c439caa3104d66d33d0f70f86f</guid>
</item>
<item>
<title>[MLIR] 重构walkAndApplyPatterns驱动以移除递归</title>
<description>对MLIR的walkAndApplyPatterns驱动进行了重构以移除递归，改进了内部结构并可能提升了性能。</description>
<link>https://github.com/llvm/llvm-project/commit/16aa283344d3fec9467e6adb7ea511c0a88afacc</link>
<guid>https://github.com/llvm/llvm-project/commit/16aa283344d3fec9467e6adb7ea511c0a88afacc</guid>
</item>
<item>
<title>[clang-tidy] 增加了检查 'misc-override-with-different-visibility'</title>
<description>新的 clang-tidy 检查可检测具有不同可见性的被重写的方法。</description>
<link>https://github.com/llvm/llvm-project/commit/a0f325bd41c931e4584feeb592987338c5b67d80</link>
<guid>https://github.com/llvm/llvm-project/commit/a0f325bd41c931e4584feeb592987338c5b67d80</guid>
</item>
<item>
<title>[MLIR] 在贪心重写器应用模式前删除不可达块</title>
<description>改进了MLIR对不可达代码的处理，以防止崩溃和无限循环。</description>
<link>https://github.com/llvm/llvm-project/commit/87e6fd161a6a2557452a5d4726e4ad184c413917</link>
<guid>https://github.com/llvm/llvm-project/commit/87e6fd161a6a2557452a5d4726e4ad184c413917</guid>
</item>
<item>
<title>[OpenMP][Test][NFC] 将输出工具数据以十六进制格式输出，提高可读性</title>
<description>在不改变行为的情况下改进OpenMP测试案例输出数据格式的可读性。</description>
<link>https://github.com/llvm/llvm-project/commit/98dd1888bf0eaaece86c9d3ae4beeb089e7a2ea7</link>
<guid>https://github.com/llvm/llvm-project/commit/98dd1888bf0eaaece86c9d3ae4beeb089e7a2ea7</guid>
</item>
<item>
<title>[Clang][X86] 添加对 avx512 __builtin_ia32_select* 的 constexpr 处理</title>
<description>为AVX-512向量选择内置函数添加constexpr属性以实现更好的优化。</description>
<link>https://github.com/llvm/llvm-project/commit/ce5276f61caa39e5b62af9ff717c6e92eefab2bb</link>
<guid>https://github.com/llvm/llvm-project/commit/ce5276f61caa39e5b62af9ff717c6e92eefab2bb</guid>
</item>
<item>
<title>移除不必要的getPointerTy调用</title>
<description>移除LLVM DAG中的多余getPointerTy调用，使代码更简洁。</description>
<link>https://github.com/llvm/llvm-project/commit/53e9d3247ef228b62331daa7ac7688d00e200050</link>
<guid>https://github.com/llvm/llvm-project/commit/53e9d3247ef228b62331daa7ac7688d00e200050</guid>
</item>
<item>
<title>AArch64：移除SIMDLongThreeVectorTiedBHSabal表生成类</title>
<description>移除与AArch64 SIMD指令相关的表生成类，对外部行为无明显影响。</description>
<link>https://github.com/llvm/llvm-project/commit/8f9852920930f35d1fd6c60676af662f724e86b2</link>
<guid>https://github.com/llvm/llvm-project/commit/8f9852920930f35d1fd6c60676af662f724e86b2</guid>
</item>
<item>
<title>[mlir][emitc] 如何为结构体内的数组成员赋值</title>
<description>关于MLIR的EmitC方言在为结构体内的数组成员赋值时所受限制的讨论。</description>
<link>https://discourse.llvm.org/t/mlir-emitc-how-to-assign-value-for-array-member-in-struct/87967</link>
<guid>https://discourse.llvm.org/t/mlir-emitc-how-to-assign-value-for-array-member-in-struct/87967</guid>
</item>
<item>
<title>MLIR 文档修复</title>
<description>MLIR 代码块中的微小文档修复</description>
<link>https://github.com/llvm/llvm-project/commit/a66d8f62e6a6e64c77322533e4f6f2a2a5884aa2</link>
<guid>https://github.com/llvm/llvm-project/commit/a66d8f62e6a6e64c77322533e4f6f2a2a5884aa2</guid>
</item>
<item>
<title>[clang-tidy][NFC] 删除 clang-tidy 脚本中的 py2 条件</title>
<description>从 clang-tidy 脚本中删除 Python 2 兼容性代码。</description>
<link>https://github.com/llvm/llvm-project/commit/66a2d1b7580aab8ac2c171647c39fd85fe711013</link>
<guid>https://github.com/llvm/llvm-project/commit/66a2d1b7580aab8ac2c171647c39fd85fe711013</guid>
</item>
<item>
<title>clang-tidy针对cppcoreguidelines-prefer-member-initializer假阳性问题的修复</title>
<description>修复了clang-tidy中关于继承成员初始化的假阳性警告。</description>
<link>https://github.com/llvm/llvm-project/commit/326d749a368a842e71fd0d4cd7bb97c6d9f52f3e</link>
<guid>https://github.com/llvm/llvm-project/commit/326d749a368a842e71fd0d4cd7bb97c6d9f52f3e</guid>
</item>
<item>
<title>[clang-tidy] 避免匹配系统头文件中的节点</title>
<description>针对 clang-tidy 的补丁避免匹配系统头文件内的 AST 节点。</description>
<link>https://github.com/llvm/llvm-project/commit/bd77e9acf0e86a46379e1780dd58a787a7ee78f5</link>
<guid>https://github.com/llvm/llvm-project/commit/bd77e9acf0e86a46379e1780dd58a787a7ee78f5</guid>
</item>
<item>
<title>处理等于条件中的截断 u1 条件</title>
<description>(https://github.com/llvm/llvm-project/commit/5ae8a9b8cee3d4477fdec107a3ab29b633ec4f9f) 提供了一个修复提案，以处理在等于比较中遇到的截断 u1 条件。该修复提案还包括检查仅有一个使用条件分支。</description>
<link>https://github.com/llvm/llvm-project/commit/5ae8a9b8cee3d4477fdec107a3ab29b633ec4f9f</link>
<guid>https://github.com/llvm/llvm-project/commit/5ae8a9b8cee3d4477fdec107a3ab29b633ec4f9f</guid>
</item>
<item>
<title>修复 clang 中非指针类型的伪析构函数调用</title>
<description>修复 Clang 编译器中的非指针类型上的伪析构函数调用。</description>
<link>https://github.com/llvm/llvm-project/commit/e44784fb44bd00acc0ecd25537a359c3a1df8f17</link>
<guid>https://github.com/llvm/llvm-project/commit/e44784fb44bd00acc0ecd25537a359c3a1df8f17</guid>
</item>
<item>
<title>[TableGen][DecoderEmitter] 提升冲突信息的输出</title>
<description>此提交改进了 TableGen 的 DecoderEmitter 中冲突信息的输出方式，具体通过添加一个用于打印每个位置的位值的新功能，并引入可选的 `BitWidth` 参数来限制 `dumpBits` 函数每次调用中打印的位数。这一变更旨在提供更清晰、更详细的关于解码冲突的信息。</description>
<link>https://github.com/llvm/llvm-project/commit/ea4325f174baca7d12e128db4f9f3b41a918da67</link>
<guid>https://github.com/llvm/llvm-project/commit/ea4325f174baca7d12e128db4f9f3b41a918da67</guid>
</item>
<item>
<title>[TableGen] Make a function static (NFC)</title>
<description>@@ -348,6 +348,24 @@ static const BitsInit &amp;getBitsField(const Record &amp;Def, StringRef FieldName) { | 348 | 348 | // Representation of the instruction to work on. | 349 | 349 | typedef std::vector insn_t; | 350 | 350 | | </description>
<link>https://github.com/llvm/llvm-project/commit/05f1673e7569da0762d2a5d890ca4860760dad34</link>
<guid>https://github.com/llvm/llvm-project/commit/05f1673e7569da0762d2a5d890ca4860760dad34</guid>
</item>
<item>
<title>TableGen[DecoderEmitter] 输出早期冲突</title>
<description>在编码过程中，发现出现了冲突。为了便于调试和问题定位，增加了一些调试信息输出，以便更早地显示这些冲突。</description>
<link>https://github.com/llvm/llvm-project/commit/05827e7ccb4e1295648e38b11ebdbb8fd817177b</link>
<guid>https://github.com/llvm/llvm-project/commit/05827e7ccb4e1295648e38b11ebdbb8fd817177b</guid>
</item>
<item>
<title>clang: 修改OMPClauseProfiler方法名中的拼写错误</title>
<description>在llvm项目的LLVM/llvm-project仓库中，commit 3d83dbb73610c6cfb1b67252bd2d519a0aa5e308进行了修改。主要修复了OMPClauseProfiler方法名中的拼写错误。</description>
<link>https://github.com/llvm/llvm-project/commit/3d83dbb73610c6cfb1b67252bd2d519a0aa5e308</link>
<guid>https://github.com/llvm/llvm-project/commit/3d83dbb73610c6cfb1b67252bd2d519a0aa5e308</guid>
</item>
<item>
<title>[TableGen][DecoderEmitter] 缩短 Filters 向量的生命周期至 NFC (NFC)</title>
<description>在 LLVM 项目中，对 TableGen 和 DecoderEmitter 的代码进行修改。通过将 Filters 向量的生命周期延长到 NFC（No Future Changes）级别的改动来优化编码。</description>
<link>https://github.com/llvm/llvm-project/commit/fc6024d8959cdb82e5421787882288e26ee728bc</link>
<guid>https://github.com/llvm/llvm-project/commit/fc6024d8959cdb82e5421787882288e26ee728bc</guid>
</item>
<item>
<title>clang-format更新OneLineFormatOffRegex选项，修正getcpu标准及增强CI日志统计功能</title>
<description>在llvm项目中，进行了多处功能的更新和修复。主要包括以下几方面：1. 在clang-format中添加了OneLineFormatOffRegex选项来简化格式化的管理；2. 修正了libstdc++中的getcpu标准函数；3. CI系统新增了一个显示统计信息的功能；4. ADT模块在SmallPtrSetImpl::remove_if方法中使用small_buckets()。这些更改的目的是为了提高代码质量和维护性。</description>
<link>https://github.com/llvm/llvm-project/commit/ee51f35993d9623563551f9bb9521824992967b6</link>
<guid>https://github.com/llvm/llvm-project/commit/ee51f35993d9623563551f9bb9521824992967b6</guid>
</item>
<item>
<title>libc++ flat_set 缺少特性宏</title>
<description>https://github.com/llvm/llvm-project/commit/f3008c11406440959f6fc2120dd2117df6fa11ce</description>
<link>https://github.com/llvm/llvm-project/commit/f3008c11406440959f6fc2120dd2117df6fa11ce</link>
<guid>https://github.com/llvm/llvm-project/commit/f3008c11406440959f6fc2120dd2117df6fa11ce</guid>
</item>
<item>
<title>RISC-V: 添加 missed DONE 以解决 vx 结合模式 [NFC]</title>
<description>您通过另一个标签页或窗口登录。刷新会话。</description>
<link>https://github.com/gcc-mirror/gcc/commit/756f771f58f79406a08b6d574939b70d895bb613</link>
<guid>https://github.com/gcc-mirror/gcc/commit/756f771f58f79406a08b6d574939b70d895bb613</guid>
</item>
<item>
<title>[M68k] 为PCD寻址模式添加anyext模式</title>
<description>在M68k的任何扩展操作中添加PCD寻址模式，并增加新的测试用例。</description>
<link>https://github.com/llvm/llvm-project/commit/bc3754de0aed44147e64b99414ecb06f84ab1a91</link>
<guid>https://github.com/llvm/llvm-project/commit/bc3754de0aed44147e64b99414ecb06f84ab1a91</guid>
</item>
<item>
<title>移除对llvm-project-tests.yml的调用到spirv-tests.yml</title>
<description>https://github.com/llvm/llvm-project/commit/1f5047e43092f39a60a0ddba921610c2ab00897e</description>
<link>https://github.com/llvm/llvm-project/commit/1f5047e43092f39a60a0ddba921610c2ab00897e</link>
<guid>https://github.com/llvm/llvm-project/commit/1f5047e43092f39a60a0ddba921610c2ab00897e</guid>
</item>
<item>
<title>移除declareCommon函数中的未使用参数IsTarget</title>
<description>在https://github.com/llvm/llvm-project/commit/2cedb286b8a37a3c6f09ac394b5e95413baac287中，移除了declareCommon函数中的未使用参数IsTarget。</description>
<link>https://github.com/llvm/llvm-project/commit/2cedb286b8a37a3c6f09ac394b5e95413baac287</link>
<guid>https://github.com/llvm/llvm-project/commit/2cedb286b8a37a3c6f09ac394b5e95413baac287</guid>
</item>
<item>
<title>MCSymbol: 移除AMDGPU特有的Kind::TargetCommon并重命名SymContents为kind</title>
<description>这些LLVM项目的提交涉及对MCSymbol类的更改，特别是关于移除一个特定于AMDGPU特性的成员和将一个符号内容枚举器重命名为kind的变化。</description>
<link>https://github.com/llvm/llvm-project/commit/aa96e20dcefa7d73229c98a7d2727696ff949459</link>
<guid>https://github.com/llvm/llvm-project/commit/aa96e20dcefa7d73229c98a7d2727696ff949459</guid>
</item>
<item>
<title>TableGen[解码发射器] 添加工作于范围的帮助者（NFC）</title>
<description>https://github.com/llvm/llvm-project/commit/7bb73455f76c8ce3b470fb931daa68a33ec79c34</description>
<link>https://github.com/llvm/llvm-project/commit/7bb73455f76c8ce3b470fb931daa68a33ec79c34</link>
<guid>https://github.com/llvm/llvm-project/commit/7bb73455f76c8ce3b470fb931daa68a33ec79c34</guid>
</item>
<item>
<title>为 #153946 添加测试</title>
<description>在 https://github.com/llvm/llvm-project/commit/73775a0f2749d0cc8b8877bf34ebb3534a2e7913 中，引入了针对特定问题 #153946 的测试用例，并使用了不同的循环向量化宽度和交错选项。</description>
<link>https://github.com/llvm/llvm-project/commit/73775a0f2749d0cc8b8877bf34ebb3534a2e7913</link>
<guid>https://github.com/llvm/llvm-project/commit/73775a0f2749d0cc8b8877bf34ebb3534a2e7913</guid>
</item>
<item>
<title>关于MLIR中更丰富的TableGen描述的调查</title>
<description>关于通过更丰富的TableGen描述在MLIR中提升编译器和开发者工具有潜力增强的调查。</description>
<link>https://discourse.llvm.org/t/survey-interested-in-discussing-richer-tablegen-descriptions-in-mlir/87959</link>
<guid>https://discourse.llvm.org/t/survey-interested-in-discussing-richer-tablegen-descriptions-in-mlir/87959</guid>
</item>
<item>
<title>[clang][test] Clang 调试信息测试的位置</title>
<description>讨论了将 Clang 调试信息测试集中在一个特定目录中以更易于管理的问题。</description>
<link>https://discourse.llvm.org/t/clang-test-location-of-clang-debug-info-tests/87958</link>
<guid>https://discourse.llvm.org/t/clang-test-location-of-clang-debug-info-tests/87958</guid>
</item>
<item>
<title>启动NVGPU方言集成测试的问题</title>
<description>启动NVGPU方言集成测试时遇到问题，标记为不支持并出现python脚本错误。</description>
<link>https://discourse.llvm.org/t/how-to-start-the-integrated-test-of-nvgpu-dialect/87950</link>
<guid>https://discourse.llvm.org/t/how-to-start-the-integrated-test-of-nvgpu-dialect/87950</guid>
</item>
</channel></rss>